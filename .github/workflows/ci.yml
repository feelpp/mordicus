name: CI

on:
  push:
    branches:
      - 'cemosis'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches:
      - 'cemosis'

jobs:
#docs:
#  runs-on: ubuntu-latest
#  if: "!contains(github.event.head_commit.message, 'doc skip')"
#  steps:
#  - uses: buildkite/trigger-pipeline-action@v1.2.0
#    env:
#      BUILDKITE_API_ACCESS_TOKEN: ${{ secrets.BUILDKITE_API_ACCESS_TOKEN }}
#      PIPELINE: "feelpp/cemosis-docs"
#      COMMIT: "HEAD"
#      BRANCH: "master"
#      MESSAGE: ":github: Triggered from a GitHub Action by brain Project"
  build:
    runs-on: self-ubuntu-20.04
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    name: Check Build, Install, Run
    steps:
    - uses: actions/checkout@v2
    - name: Configure Mordicus
      run: |
        ls -lrt
        cmake --version
        cmake --preset install
    - name: Build Mordicus
      run:  cmake --build --preset install
    - name: Add Python Dependencies
      run: |
        pip install --upgrade pip
        pip install -r ./src/poc-1/requirements.txt
    - name: Add PYTHONPATH
      run: |
        echo "PYTHONPATH=$GITHUB_WORKSPACE/src/poc-1/src/:$HOME/.local/lib/python3.8/site-packages/" >> $GITHUB_ENV
        ls -lrt src/poc-1/src
        echo $GITHUB_WORKSPACE
        ls $GITHUB_WORKSPACE/src/poc-1/src
    - name: Run PyTest
      run: $HOME/.local/bin/pytest --ignore Modules/Safran
      working-directory: src/poc-1/tests
    - name: Run Mordicus Core Coverage
      run: |
        echo '... NonRegression tests on Core ended'
        mkdir -p pages/coverageReportCore
        echo 'Starting coverage report on Core...'
        $HOME/.local/bin/pytest --cov=../../src/Mordicus/Core --cov-report=html:../../../../pages/coverageReportCore && cd -
      working-directory: src/poc-1/tests/Core
    - name: Upload 
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: mordicus-artifacts
        # Directory containing files to upload
        path: build/install/assets/mordicus-*

  deliver:
    runs-on: ubuntu-20.04
    needs: build
    # needs: check
    name: Docker Build, Tag, Push

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: Download 
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: mordicus-artifacts
        path: artifacts/
    -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/feelpp/mordicus
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1        
    - 
      name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    - 
      name: Build container image
      uses: docker/build-push-action@v2
      with: 
        push: ${{ github.event_name != 'pull_request' }}
        context: artifacts
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: ./Dockerfile